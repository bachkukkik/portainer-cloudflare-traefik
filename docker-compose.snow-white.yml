services:
  traefik:
    image: traefik:latest
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      - "--ping=true"
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    # ports:
    #   - "80:80"
    #   - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      default:
        aliases:
          - traefik

  portainer:
    image: "portainer/portainer-ce:latest"
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "portainer_data:/data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_DOMAIN_NAME}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure" # Use HTTPS entrypoint
      - "traefik.http.routers.portainer.tls=true" # Enable TLS/SSL
      - "traefik.http.routers.portainer.tls.certresolver=myresolver" # Use the certificate resolver configured for Let's Encrypt
      - "traefik.http.services.portainer.loadbalancer.server.port=9000" # Ensure this is the correct port
    networks:
      default:
        aliases:
          - portainer_data
      
  cloudflared_kk:
    container_name: cloudflared_kk
    image: cloudflare/cloudflared:latest
    command: "tunnel --no-autoupdate run --token ${CLOUDFLARE_KK_TOKEN}"
    restart: unless-stopped

  cloudflared_uxible:
    container_name: cloudflared_uxible
    image: cloudflare/cloudflared:latest
    command: "tunnel --no-autoupdate run --token ${CLOUDFLARE_UXIBLE_TOKEN}"
    restart: unless-stopped

  autoheal:
    deploy:
      replicas: 3
    environment:
      AUTOHEAL_CONTAINER_LABEL: autoheal-app
    image: willfarrell/autoheal:latest
    network_mode: none
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  portainer_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${VOLUME_DOCKER:-/home/pi/docker_volumes}/portainer_data=

networks:
  default:
